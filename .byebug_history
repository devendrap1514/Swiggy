continue
@order
continue
@order
order
continue
params
continue
Order.all
@order
continue
@order
order
continue
@order
continue
n
continue
n
continue
n
continue
resource.errors.full_messages
n
params
resource
continue
current_user.avatar_url
continue
order.order_items.second.restaurant_dish.dish.dish_images.attached?
order.order_items.first.restaurant_dish.dish.dish_images.attached?
order.order_items.first.restaurant_dish.dish.dish_images
order.order_items.first.restaurant_dish.dish.image
continue
User.first.password_ecrypted
User.first.password
User.first
User.first.
resource
resource.password
continue
n
continue
n
resource
n
resource
continue
provider
resource_name
resource
continue
omniauth_authorize_path(resource_name, provider).gsub("scope=email&", "")
omniauth_authorize_path
omniauth_authorize_path(resource_name, provider)
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params["user"]
params[user]
params
continue
params
continue
params
continue
params
paams
continue
params
continue
params
continue
params
continue
params
continue
params
continue
params.require(:user)
continue
params.require(:user)
continue
params.require(:auth_registrations)
params
continue
params.require(:user)
params.permit(:uid)
params.permit
params.require(:user)
params
continue
params
continue
user.split("/")
user.split("")
user.to_a
user.to_h
user
user["name"]
user
user = params["user"]
params["user"]["id"]
params["user"]["name"]
params["user"][:name]
params["user"]["name"].value
params["user"]["name"]
params["user"]
params
continue
params["user"]
params
continue
params["controller"]
params[""]
params[]
params["id"]
params[id]
params[id}
params[0]
params
params[]["name"]
params["name"]
params[:name]
params
continue
params
user
continue
params[:user]
params
continue
params
continue
params[:user]
request
params
parama
user
params
continue
request.referre
request.referrer
request
params
user
continue
n
user
continue
user.id
user.present?
user.nil?
user.present?
user
continue
auth.info.email
u.errors.full_messages
u = User.where(provider: auth.provider, uid: auth.uid).first_or_create(email: auth.info.email)
u = User.where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
u.errors.full_messages
u = User.where(provider: auth.provider, uid: auth.uid).first_or_create
User.where(provider: auth.provider, uid: auth.uid).first_or_create
      user.avatar_url = auth.info.image # assuming the user model has an image
      user.name = auth.info.name # assuming the user model has a name
      user.password = Devise.friendly_token[0, 20]
      user.email = auth.info.email
User.where(provider: auth.provider, uid: auth.uid).first_or_create do |user|
continue
User.all
auth.uid
auth.email
auth.provider
auth
continue
auth.info
auth
continue
for ch in url
for ch in url end
for ch in url
url.each
url.class
type(url)
url
n
continue
n
url
n
continue
n
trim_url
n
continue
trim_url
url
trim_url
n
url
continue
n
url
continue
n
continue
n
image
n
uri
n
fake_image_url
n
fake_image_url
n
continue
n
fake_image_url
n
continue
n
continue
n
fake_image_url
n
continue
https://loremflickr.com/300/300/food,Fettuccine Alfredo
open(url)
url
n
continue
api_v1_dish_path(dish)
api_v1_dish_path
continue
open(url)
url
n
url
continue
n
url
n
continue
url
n
continue
dish.errors.any?
continue

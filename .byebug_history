continue
headers
n
headers
continue
request.headers
request.body
request
response.body
response
reponse
get '/owner'
request
headers
header
headers
request
hsh
n
hsh
continue
n
n 
n
hsh
n
hsh
token
continue
request.headers["Authorization"]
headers["Authorization"]
headers
continue
response.body
request.headers["Authorization"]
continue
request.headers["Authorization"]
request.headers
response.body
response
token
owner
user_id
owner.id
continue
request.headers["Authorization"]
continue
request.headers["Authorization"]
continue
request.headers["Authorization"]
request.headers
request
continue
rails s
continue
response.body
responce.body
continue
response.body
response
continue
get '/owner', headers: { 'Authorization': token }
get '/owner', headers: {}
get '/owner', headers: {{
token
response.body
response.bodyu
continue
headers['Authorization']
JsonWebToken.encode(user_id: owner.id)
response.body
response
headers
continue
request
continue
n
request
continue
response.body
response
continue
data['name']
data[:name]
data
n
data
continue
JSON.parse(response.body)['name']
JSON.parse(response.body)[:name]
JSON.parse(response.body)[:name}
JSON.parse(response.body)
continue
JSON.parse(response.body)
JSON.parse(response.body
continue
response.body["username"]
response.body[\"username\"]
response.body[|"username\"]
response.body.key
response.body.keys
response.body['username'].methods
response.body['username'].val
response.body['username']
response.body['usernmae']
response.body['name']
response.body.name
response.body
response.body.
response.body.methods
response.body.
response.body[]
response.body.as_json
response.body.username
response.body
response
continue
response.body
response
continue
response.body
response
continue
n
continue
response.body
continue.errors
continue
owner
continue
response.body
continue
response.body
response
resource
continue
response.body
response.errors
response
continue
post '/owner', params: owner.as_json
response
n
owner
continue
owner
continue
owner
continue
create(:owner).as_json
continue
a
continue
/show
path
it
desribe
continue
restaurant
continue
n
restaurant
n
restaurant
expect(restaurant).to_not be_valid
restaurant
n
status
restaurant
continue
user.errors
user
user.
user
Customer.all
user.email
user
continue
user.username
user
customer
user.username
user
continue
user.username
user
continue
user.username
user.password_confirmation
user.password
continue
exit
user.password_confirmation
user.password
user
continue
owner
continue
expect
it ""
let
it
describe
continue
n
subject
updated_at
:name
name
expect
subject
n
subject
continue
RestaurantDish.joins(:cart_items)
RestaurantDish.joins(:carts).ids
RestaurantDish.joins(:carts).id
RestaurantDish.joins(:carts)
RestaurantDish.joins(:carts).ids
RestaurantDish.joins(:carts).all
RestaurantDish.joins(:carts)
Dish.find(24).restaurant_dishes
Dish.find(28)
Dish.find(28).restaurant_dishes
dish.restaurant_dishes
dish
Dish.find(24).restaurant_dishes
continue
n
Dish.find(24).restaurant_dishes
Dish.find(24).restaurants
Dish.find(24).restaurant
Dish.find(24)
RestaurantDish.all
RestaurantDish
Dish.all
dish.restaurant_dishes.ids
dish.restaurant_dishes.all
dish.restaurant_dishes
continue
resources
resource
dish_id
id
params
resource
continue
resource
continue
resource
dish
dihs
resource
ul
li
n

continue
for ch in url
for ch in url end
for ch in url
url.each
url.class
type(url)
url
n
continue
n
url
n
continue
n
trim_url
n
continue
trim_url
url
trim_url
n
url
continue
n
url
continue
n
continue
n
image
n
uri
n
fake_image_url
n
fake_image_url
n
continue
n
fake_image_url
n
continue
n
continue
n
fake_image_url
n
continue
https://loremflickr.com/300/300/food,Fettuccine Alfredo
open(url)
url
n
continue
api_v1_dish_path(dish)
api_v1_dish_path
continue
open(url)
url
n
url
continue
n
url
n
continue
url
n
continue
dish.errors.any?
continue
dish.errors.any?
continue
dish.errors.any?
continue
dish.errors.any?
continue
n
dish.errors.any?
continue
 @restaurant_dishes.total_pages
paginate @restaurant_dishes.total_pages
paginate @restaurant_dishes
@restaurant_dishes
continue
n
params
continue
@restaurant.owner_id
current_user.id
@restaurant
current_user
continue
@restaurant_dishes
@restaurant
params
continue
params[:id]
params
params0[]
params[]
params
continue
url_for current_user.profile_picture
current_user.profile_picture
current_user.profile_picture.attached?
continue
current_user.profile_picture.url
current_user.profile_picture.path
current_user.profile_picture
continue
Json.parse RestaurantDishSerializer.new(@restaurant_dishes.first).json
RestaurantDishSerializer.new(@restaurant_dishes.first).json
RestaurantDishSerializer.new(@restaurant_dishes.first).josn
RestaurantDishSerializer.new(@restaurant_dishes.first)
output[:data]
output
n
continue
n
output
n
output
n
output
n
output
@restaurant_dishes
continue
request.referrer
request
continue
order
continue
n
order
continue
@restaurant_dishes
continue
@restaurant_dishes
paginate @restaurant_dishes
continue
paginate @restaurant_dishes
continue
@restaurant_dishes.total_pages
n
continue
@restaurant_dishes
n
continue
@restaurant_dishes
n
@restaurant_dishes
n
@restaurant_dishes
n
@restaurant_dishes
continue
@restaurant_dishes
n
continue
n
@restaurant_dishes
n
@restaurant_dishes
n
@restaurant_dishes
continue
params
continue
params
continue
locals[:path]
:path
locals
params
path
continue
params
continue
params[:user]
params
continue
n
self
continue
@restaurant_dish
continue
request.methods
request.referrer
request
continue
params
continue
n
continue
n
params
q
RestaurantDish.joins(:restaurant, :dish).where("restaurants.restaurant_name ILIKE ? or dishes.dish_name ILIKE ?", "%apna%", "%man%")
RestaurantDish.filter_by_search(q)
@restaurant_dishes
n
continue
RestaurantDish.filter_by_restaurant_name("Apn")
RestaurantDish.filter_by_restaurant_name("apn")
RestaurantDish.filter_by_restaurant_name
RestaurantDish.filter_by_reataurant_name
@restaurant_dishes
n
dish_name
restaurant_name
n
params[:restaurant_name]
params
continue
order
continue
@orders.each
@orders
continue
@output
continue
cart_item
continue
user.type
continue
exception.message
exception
params
continue
rails_blob_path @dish.dish_images[0]
rails_blob_path @dish.dish_images
rails_blobs_path @dish.dish_images
rails_blob_path @dish.dish_images
@dish.dish_images.attachments
@dish.dish_images.attachements
@dish.dish_images.attachement
@dish.dish_images.any?
@dish.dish_images.any
@dish.dish_images
@dish
continue
rd.dish.dish_images
rd.dish.dish_images[0]
rd.dish.dish_images
rd.dish
rd
dish
continue
headers
params
continue
restaurant_dish
continue
restuarant_dish
